cmake -G "MinGW Makefiles" -S . -B build
cmake --build build
./build/shuttle_system

Clean the Build Directory

If you encounter strange errors, delete the build directory and start fresh:

rm -rf build
cmake -S . -B build
cmake --build build



The lines starting with # in your code are preprocessor directives in C++. They are processed before the actual compilation of the code begins. Let's break them down:
1. #ifndef BOOKING_H

This stands for "if not defined". It checks whether BOOKING_H has already been defined. If it hasn't, the code proceeds to the next lines.
2. #define BOOKING_H

If BOOKING_H is not already defined, this line defines it. This prevents multiple inclusions of the same header file, avoiding redefinition errors.
3. #endif // BOOKING_H

This marks the end of the conditional block that started with #ifndef. Everything between #ifndef and #endif is only included once.
Why is this needed?

This pattern is known as an include guard. It ensures that if booking.h is included multiple times in a project, it will only be processed once, preventing duplicate declarations.


In modern C++, you can also use #pragma once, which is a simpler alternative:

Both approaches prevent header file duplication, but #pragma once is compiler-specific, while #ifndef guards are more portable across compilers.