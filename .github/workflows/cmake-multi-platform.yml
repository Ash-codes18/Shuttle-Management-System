name: CMake on Multiple Platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        build_type: [ Release ]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Clean build directory
        # Use bash even on Windows to ensure we start with a clean build directory.
        shell: bash
        run: |
          if [ -d "${{ github.workspace }}/build" ]; then
            rm -rf "${{ github.workspace }}/build"
          fi

      - name: Set build output directory
        id: build_dir
        shell: bash
        run: |
          echo "BUILD_DIR=${{ github.workspace }}/build" >> $GITHUB_OUTPUT

      - name: Configure CMake
        shell: bash
        run: |
          cmake -B "${{ steps.build_dir.outputs.BUILD_DIR }}" \
                -S "${{ github.workspace }}" \
                -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
                -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
                -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build project
        shell: bash
        run: |
          cmake --build "${{ steps.build_dir.outputs.BUILD_DIR }}" --config ${{ matrix.build_type }}

      - name: List build directory contents (for debugging)
        shell: bash
        run: |
          echo "Listing build directory contents:"
          ls -la "${{ steps.build_dir.outputs.BUILD_DIR }}"

      - name: Run shuttle_system executable on Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          # Pipe input "4" to the interactive executable so it exits gracefully.
          echo "4" | "${{ steps.build_dir.outputs.BUILD_DIR }}/shuttle_system"

      - name: Run shuttle_system executable on Windows (using PowerShell)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          Write-Output "Listing build directory contents for debugging:" 
          Get-ChildItem -Path "${env:GITHUB_WORKSPACE}\build"
          Write-Output "Running executable:"
          # Pipe input "4" to the executable so it exits gracefully.
          "4" | & "${env:GITHUB_WORKSPACE}\build\shuttle_system.exe"